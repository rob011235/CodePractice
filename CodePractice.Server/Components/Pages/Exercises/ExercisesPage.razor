@page "/Exercises"
@rendermode InteractiveServer
@inject IExercisesRepo exercisesRepo;
@inject ICompetenciesRepo competenciesRepo;
<h3>Exercises</h3>

<label>Filter by competency </label>
<select id="competencyFilter" @onchange="OnCompetencyFilterChanged">
    <option value="0">Show all</option>
    @foreach (var comp in competencies)
    {
        <option value="@comp.Id">@comp.Title</option>
    }
</select>


<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Competency</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var exercise in exercises)
        {
            <tr>
                <td>@exercise.Competency?.Title</td>
                <td>@exercise.Title</td>
            </tr>
        }
    </tbody>
</table>
<div class="row">
    <div class="col-12">
        <button class="btn btn-primary" @onclick="PreviousPage">Previous</button>
        <button class="btn btn-primary" @onclick="NextPage">Next</button>
    </div>
</div>


@code {
    List<Exercise> exercises = new List<Exercise>();
    List<Competency> competencies = new List<Competency>();
    int page = 1;
    int pageSize = 10;
    int competencyFilterId = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        competencies = competenciesRepo.GetCompetencies();
        exercises = exercisesRepo.GetExercises(page, pageSize);
    }

    void PreviousPage()
    {
        if (page > 1)
        {
            page--;
            exercises = exercisesRepo.GetExercises(page, pageSize);
        }
    }

    void NextPage()
    {
        page++;
        exercises = exercisesRepo.GetExercises(page, pageSize);
    }

    void OnCompetencyFilterChanged(ChangeEventArgs args)
    {
        var competencyFilterId = int.Parse(args.Value.ToString());
        if (competencyFilterId == 0)
        {
            exercises = exercisesRepo.GetExercises(page, pageSize);
            return;
        }
        page = 1;
        exercises = exercisesRepo.GetExercisesByCompetency(competencyFilterId, page, pageSize);
    }
}
