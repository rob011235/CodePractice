@page "/ExerciseEdit/{CompetencyId:int}"
@page "/ExerciseEdit/{CompetencyId:int}/{ExerciseId:int}"
@inject IExerciseRepo ExerciseRepo
@inject ICompetenciesRepo CompetencyRepo  
@inject NavigationManager NavigationManager

<h3>Exercise Edit</h3>

@if (exercise == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <div class="form-group">
            <label for="title">Title</label>
            <InputText class="form-control" id="title" aria-describedby="title" placeholder="Enter title" @bind-Value="exercise.Title" />
            <small id="titleHelp" class="form-text text-muted">Please enter a title for this exercise.</small>
        </div>
        <div class="form-group">
            <label for="title">Question</label>
            <InputTextArea class="form-control" id="question" aria-describedby="question" placeholder="Enter question" @bind-Value="exercise.Question" />
            <small id="questionHelp" class="form-text text-muted">Please enter the question for this exercise. Please make sure you provide the student everything they need to answer the question</small>
        </div>
        <div class="form-group">
            <label for="desiredOutput">Desired Output</label>
            <InputTextArea class="form-control" id="desiredOutput" aria-describedby="desired output" placeholder="Enter desired output" @bind-Value="exercise.DesiredOutput" />
            <small id="desiredOutputHelp" class="form-text text-muted">Please enter a desired output for this exercise.</small>
        </div>
        <div class="form-group">
            <label for="answer">Answer</label>
            <InputTextArea class="form-control" id="answer" aria-describedby="answer" placeholder="Please enter answer." @bind-Value="exercise.Answer" />
            <small id="answerHelp" class="form-text text-muted">Please enter the answer for this exercise. This will be shown to the student once they submit their answer.</small>
        </div>
        <div class="form-group">
            <button class="btn btn-primary" @onclick="OnSubmitClick">Submit</button>
            <button class="btn btn-danger" @onclick="OnCancelClick">Cancel</button>
        </div>
}

@code {
    
    [Parameter]
    public int? CompetencyId { get; set; }
    public Competency? Competency { get; set; }

    [Parameter]
    public int? ExerciseId { get; set; }
    public Exercise? exercise { get; set; }

    string SubmittedFileName { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();
        if (ExerciseId == null)
        {
            exercise = new Exercise();
        }
        else
        {
            exercise = ExerciseRepo.GetExercise((int)ExerciseId);
        }
        Competency = CompetencyRepo.GetCompetency((int)CompetencyId);
    }

    protected async Task OnSubmitClick()
    {
        if (exercise == null)
        {
            NavigationManager.NavigateTo($"/CompetencyEdit/{CompetencyId}",true);
        }
        else if (exercise?.Id == 0 && CompetencyId != null)
        {
            exercise.CompetencyId = (int)CompetencyId;
            ExerciseRepo.AddExercise(exercise);
            NavigationManager.NavigateTo($"/CompetencyEdit/{CompetencyId}",true);
        }
        else
        {
            ExerciseRepo.UpdateExercise(exercise);
            NavigationManager.NavigateTo($"/CompetencyEdit/{CompetencyId}",true);
        }
    }

    protected void OnCancelClick()
    {
        NavigationManager.NavigateTo($"/CompetencyEdit/{CompetencyId}",true);
    }
}