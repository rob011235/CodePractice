@page "/CompetencyEdit/"
@page "/CompetencyEdit/{Id:int}"
@inject ICompetenciesRepo repo
@inject NavigationManager NavigationManager

<h3>Competency Edit</h3>

@if (Competency == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="form-group">
        <label for="title">Title</label>
        <InputText class="form-control" id="title" aria-describedby="title" placeholder="Enter title" @bind-Value="Competency.Title" />
        <small id="titleHelp" class="form-text text-muted">Please enter a title for this competency.</small>
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputTextArea class="form-control" id="description" aria-describedby="description" placeholder="Enter description" @bind-Value="Competency.Description" />
        <small id="competencyHelp" class="form-text text-muted">Please enter a description for this competency.</small>
    </div>
    <div class="form-group">
        @if (Competency.Exercises?.Count() > 0)
        {

            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Exercise</th>
                        <th scope="col">Edit</th>
                        <th scope="col">Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var exercise in Competency.Exercises)
                    {
                        <tr>
                            <td>@exercise.Title</td>
                            <td><button class="btn btn-sm btn-primary" @onclick="()=>OnEditExerciseClick(exercise.Id)">Edit</button></td>
                            <td><button class="btn btn-sm btn-danger" @onclick="()=>OnDeleteClick(exercise.Id)">Delete</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="form-group">
        <button class="btn btn-primary" @onclick="@OnAddExerciseClick">Add Exercise</button>
    </div>

    @if (showModal)
    {
        <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Confirm action</h4>
                        <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <p>Are you sure you want to delete?</p>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                        <button type="button" class="btn btn-danger" @onclick=@ModalConfirmDelete>Delete</button>
                    </div>

                </div>
            </div>
        </div>
    }
}
@code
{
    bool showModal = false;

    [Parameter]
    public int? Id { get; set; }

    protected int ExerciseId { get; set; }

    public Competency? Competency { get; set; }

    override protected void OnInitialized()
    {
    }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Id == null)
        {
            Competency = new Competency();
        }
        else
        {
            Competency = repo.GetCompetency((int)Id);
        }
    }

    public void OnAddExerciseClick()
    {
        if (Competency?.Id == 0)
        {
            Competency = repo.AddCompetency(Competency);
        }
        NavigationManager.NavigateTo($"ExerciseEdit/{Competency?.Id}");
    }

    public void OnEditExerciseClick(int exerciseId)
    {
        NavigationManager.NavigateTo($"ExerciseEdit/{Competency?.Id}/{exerciseId}");
    }

    public void OnDeleteClick(int exerciseId)
    {
        ExerciseId = exerciseId;    
        showModal = true;
    }

    void ModalCancel() => showModal = false;

    void ModalConfirmDelete()
    {
        Competency.Exercises = Competency.Exercises.Where(e => e.Id != ExerciseId).ToList();

        showModal = false;
    }
}